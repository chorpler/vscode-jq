{
  "name": "jq-queryview",
  "displayName": "JQ Query View",
  "description": "Run JQ queries on JSON documents in VS Code",
  "icon": "icon.png",
  "version": "1.0.1",
  "publisher": "starmobiledevelopers",
  "repository": {
    "type": "git",
    "url": "https://github.com/chorpler/vscode-jq"
  },
  "bugs": {
    "url": "https://github.com/chorpler/vscode-jq/issues"
  },
  "engines": {
    "vscode": "^1.47.0"
  },
  "categories": [
    "Programming Languages",
    "Other"
  ],
  "extensionKind": [
    "ui",
    "workspace"
  ],
  "activationEvents": [
    "onCommand:jq.showPreview"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "JQ Query View",
      "properties": {
        "jq.shell": {
          "type": "string",
          "default": "/bin/bash",
          "markdownDescription": "Path to the shell to use when running jq"
        },
        "jq.customParameters": {
          "type": "string",
          "default": "",
          "markdownDescription": "Add custom jq parameters here, like -c for compact mode."
        },
        "jq.customCommand": {
          "type": "string",
          "default": "jq '$$user_filter' '$$file_path'",
          "markdownDescription": "Custom command that supports jq command line options.\n\n `$$user_filter` is replaced with the filter you typed\n\n `$$file_path` is replaced with the current file path"
        },
        "jq.customCommandRaw": {
          "type": "string",
          "default": "jq '$$user_filter' <(echo -e $$json_data)",
          "markdownDescription": "Custom jq command when processing raw JSON data, not a saved file.\n\n `$$user_filter` is replaced with the filter you typed\n\n `$$json_data` is replaced with the current JSON data."
        },
        "jq.customRawDataCommand2": {
          "type": "array",
          "contains": {
            "type": "string"
          },
          "uniqueItem": false,
          "items": {
            "type": "string",
            "title": "JQ query string"
          },
          "default": [
            "printf \"%s\\n\" $$json_data | jq '$$user_filter'",
            "export JQJSONDATA4=$$json_data && echo \"${JQJSONDATA4}\" | jq '$$user_filter'"
          ],
          "markdownDescription": "Custom jq command when processing raw JSON data, not a saved file.\n\n `$$user_filter` is replaced with the filter you typed\n\n `$$json_data` is replaced with the current JSON data."
        },
        "jq.debugOutput": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Enable to show debug output in the `jq debug` output panel"
        },
        "jq.strictMode": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "By default, this extension only works with files with a `json` file identifier. Turn this off if you want to use it everywhere."
        },
        "jq.queryOnSave": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Turn this on if you want to automatically re-run your jq query when you save a JSON file you've queried already."
        },
        "jq.outputNewDocument": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "If this is enabled, the output will be in a new split-screen document. If not, output will be shown in the jq Output pane."
        },
        "jq.globalFormulas": {
          "type": "array",
          "contains": {
            "type": "string"
          },
          "uniqueItems": true,
          "items": {
            "type": "string",
            "title": "JQ query string"
          },
          "default": [],
          "markdownDescription": "A list of JQ queries that should show up by default for all documents"
        },
        "jq.savedDocumentFormulas": {
          "type": "object",
          "contains": {
            "type": "array",
            "contains": {
              "type": "string"
            },
            "uniqueItems": true
          },
          "patternProperties": {
            "^.*$": {
              "type": "array",
              "contains": {
                "type": "string"
              },
              "uniqueItems": true
            }
          },
          "default": {},
          "markdownDescription": "Set of document IDs and associated arrays of saved JQ queries"
        }
      }
    },
    "commands": [
      {
        "command": "jq.showPreview",
        "title": "jq"
      },
      {
        "command": "jq.tabNext",
        "title": "jq tabNext"
      }
    ],
    "keybindings": [
      {
        "key": "ctrl+k j",
        "command": "jq.runJq",
        "when": "inJqPreview"
      },
      {
        "key": "enter",
        "command": "jq.runJq",
        "when": "inJqPreview"
      },
      {
        "key": "tab",
        "command": "jq.tabNext",
        "when": "inJqPreview"
      },
      {
        "key": "shift+tab",
        "command": "jq.tabPrev",
        "when": "inJqPreview"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "jq.showPreview",
          "group": "navigation",
          "when": "resourceScheme != jq && !config.jq.strictMode || resourceScheme != jq && resourceLangId == json"
        }
      ],
      "commandPalette": [
        {
          "group": "JQ",
          "command": "jq.showPreview",
          "when": "resourceScheme != jq && !config.jq.strictMode || resourceScheme != jq && resourceLangId == json"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "lint": "tslint -p ./",
    "watch": "tsc -watch -p ./",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/node": "^20.12.7",
    "@types/vscode": "^1.88.0",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.3.9",
    "prettier": "^1.19.1",
    "tslint": "^6.1.2",
    "tslint-config-prettier": "^1.18.0",
    "typescript": "^4.8.4"
  }
}
